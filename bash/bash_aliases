# vim: set filetype=sh :

# easier navigation from github.com/samstoller/.dotfiles/
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."

alias l='ls'
alias la='ls -a'
alias ll='ls -l -h'

# Generic extract cribbed from github.com/veloce/dotfiles/blob/master/bashrc
function extract()
{
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)   tar xvjf $1     ;;
            *.tar.gz)    tar xvzf $1     ;;
            *.bz2)       bunzip2 $1      ;;
            *.rar)       unrar x $1      ;;
            *.gz)        gunzip $1       ;;
            *.tar)       tar xvf $1      ;;
            *.tbz2)      tar xvjf $1     ;;
            *.tgz)       tar xvzf $1     ;;
            *.zip)       unzip $1        ;;
            *.Z)         uncompress $1   ;;
            *.7z)        7z x $1         ;;
            *)           echo "'$1' cannot be extracted via >extract<" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

alias g='git status -sb'
alias grepos='find $HOME -type d -name ".git" -not -path "*\.cabal*" -not -path "*\.stack*" -not -path "*\.vim*"| sed "s#/\.git##" | more'
function committandi {
    pushd . > /dev/null
    for repo in `grepos`; do
        cd $repo
        output=`git status --short`
        if [[ ! -z "$output" ]]; then
            echo "In ${repo}:"
            git status --short
        fi
    done
    popd > /dev/null
    unset repo output
}
alias cmdi='committandi'

# TODO: hide function itself from user, only expose alias
function ghcCompileAndCleanup {
    outputdir="ghc_intermediate_files"
    existed=0
    if [[ -d "$outputdir" ]]; then
        existed=1
    fi
    ghc -W -outputdir "$outputdir" $@
    # TODO: figure out how to use test -a
    if [[ 0 -eq $existed ]]; then
        rm -rf "$outputdir"
    fi
    unset outputdir existed
}
alias ghc='ghcCompileAndCleanup'
alias ghci='ghci +RTS -M200M -RTS'
alias rh='runhaskell'
function pointfreeUniqueLines {
    pointfree --verbose "$@" | awk '!seen[$0]++' -
}
alias pf='pointfreeUniqueLines'

function dispatchIp {
    if [[ 0 == $# ]]; then
        curl --silent icanhazip.com
    else
        ip $@
    fi
}
alias ip='dispatchIp'

alias m='time make'

# clobbering mv is stupid
alias mv='mv --no-clobber'
# why the fuck does cp clobber by default, I can't take this bullshit
alias cp='cp --no-clobber'

# from https://wiki.archlinux.org/index.php/man_page#Colored_man_pages
function man {
    env LESS_TERMCAP_mb=$'\E[01;31m' \
    LESS_TERMCAP_md=$'\E[01;38;5;74m' \
    LESS_TERMCAP_me=$'\E[0m' \
    LESS_TERMCAP_se=$'\E[0m' \
    LESS_TERMCAP_so=$'\E[38;5;246m' \
    LESS_TERMCAP_ue=$'\E[0m' \
    LESS_TERMCAP_us=$'\E[04;38;5;146m' \
    man "$@"
}

# TODO: see TODO above
function pingcheck {
    if [[ "$@" == "" ]]; then
        if ping -c 1 -w 1 -W 1 vanenet.hu >& /dev/null; then
            echo "Internet connection is working. :)"
            return 0
        else
            echo "No internet connection. :("
            return 1
        fi
    else
        ping $@
    fi
}
alias p='time pingcheck'

alias rm="echo \"Use 'trash' instead\" #"
alias rm!='\rm'

alias up='sudo apt-get update && sudo apt-get upgrade --yes'

alias vi='vim.tiny -C -u NONE'

alias xb='xboard'
alias xboard='xboard -initialMode Analysis -absoluteAnalysisScores true -scoreWhite true -fUCI -fcp stockfish -sUCI -scp stockfish'

alias exa='exa --long --git --sort type --classify --ignore-glob="*pycache*"'
alias exaa='exa --all --all'
alias tree='\exa --tree'

alias as='arbtt-stats --min-percentage=0 --output-exclude=Program:'

alias grep='grep --exclude-dir=".git"'
