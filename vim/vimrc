execute pathogen#infect()

syntax on
filetype plugin indent on

set nocompatible

let terminator_profile=$PROFILE
" Settings to accomodate each colorscheme
if terminator_profile ==? "" || terminator_profile ==? "default"
    set t_Co=256
    set background=dark
    set cursorline
    set cursorcolumn
    colorscheme ir_black
endif
if terminator_profile ==? "solarized"
    set t_Co=16
    set background=dark
    colorscheme solarized
endif

set noerrorbells
set visualbell
set t_vb=

set showcmd

set timeoutlen=150

set number
set norelativenumber
set numberwidth=5

set history=1000

set autoread " not sure about this one yet

" Persistent undo. Why the hell isn't this default anyway?
set undofile
set undodir=~/.vim/undo

set sessionoptions-=options

set wildmenu
set wildignore+=*.o
set wildignore+=*.bmp,*.gif,*.jpg,*.jpeg,*.png,*.ppm
set wildignore+=*.flac,*.mp3,*.ogg,*.wav
set wildignore+=*.avi,*.mkv,*.mov,*.mpg,*.mpeg,*.mp4,*.ogv,*.wmv
set wildignore+=*.flv,*.swf
set wildignore+=*.so,*.swp
set wildignore+=*.tar.gz,*.tgz,*.7z,*.zip

set mouse=

set hidden " I don't even know what this does but it's supposed to be on

set laststatus=2

set expandtab
set smarttab " not sure about this one yet
set shiftwidth=4
set tabstop=4
set textwidth=80
set wrap
set scrolloff=1
set formatoptions+=jn

set autoindent
set cindent " not sure about this one yet

set backspace=indent,start

let mapleader=" "

set showmatch

set ignorecase
set smartcase
set noincsearch
set hlsearch
set gdefault
" clear search highlight
noremap <silent> <leader>h :noh<CR>

inoremap <CR> <C-c>
vnoremap <CR> <C-c>

" é is right under your pinky on a Hungarian keyboard
noremap é ;
noremap É ,

vnoremap <silent> * :call VisualSelection('f', '')<CR>
vnoremap <silent> # :call VisualSelection('b', '')<CR>

noremap j gj
noremap k gk

noremap J L10k
noremap K H10j
" use C-j for joining instead of the default J
noremap <C-j> J
set nojoinspaces

nmap <C-k> "_dd
vmap <C-k> "_d

nnoremap Y y$

" jump inside brackets
" improve these to use /(.\{-}) later
nnoremap ) t)vib
nnoremap ( T(vib

" swap commands for link navigation in online help
nnoremap <C-t> <C-]>
nnoremap <C-]> <C-t>

" this hack makes G jump to and fro between the first and last lines
noremap äResetG :noremap G ggäResetG<CR>
noremap G GäResetG
"TODO!

set splitright
set splitbelow
set diffopt+=vertical

map <C-s> :vsplit<CR>
map <Tab> <C-w>w
" Tab is the same as C-i. We're going to need a replacement to navigate the jumplist
nnoremap <C-n> <C-i>

set tabpagemax=20

map <C-h> gT
map <C-l> gt

"set pastetoggle=<leader>v "this sucks when in insert mode

if has("autocmd")
  " return cursor to where you left off last time
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
  " nice autosave idea from mscoutermarsh's vimrc
  au FocusLost * :wa
endif

" --==== configure plugins ====--

" NERDTree
if !empty(glob("~/.vim/bundle/nerdtree"))
    nnoremap Q :NERDTreeToggle<CR>
    nnoremap <leader>n :NERDTreeToggle<CR>
    nnoremap <leader>m :NERDTreeFind<CR>
    " open NERDTree if no files were specified
    if has("autocmd")
        autocmd StdinReadPre * let s:std_in=1
        autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
    endif
endif

" Tagbar
if !empty(glob("~/.vim/bundle/tagbar"))
    noremap <leader>l :TagbarToggle<CR>
endif

" smooth-scroll
if !empty(glob("~/.vim/bundle/vim-smooth-scroll"))
    noremap <silent> <C-u> :call smooth_scroll#up(&scroll, 10, 1)<CR>
    noremap <silent> <C-d> :call smooth_scroll#down(&scroll, 10, 1)<CR>
    noremap <silent> <C-b> :call smooth_scroll#up(&scroll*2, 5, 1)<CR>
    noremap <silent> <C-f> :call smooth_scroll#down(&scroll*2, 5, 1)<CR>
endif

" Airline
if !empty(glob("~/.vim/bundle/vim-airline"))
    let g:airline#extensions#tabline#enabled=1
endif

" Gundo
if !empty(glob("~/.vim/bundle/gundo.vim"))
    nnoremap <leader>g :GundoToggle<CR>
    let g:gundo_width=50
endif

" Ctrl-P
if !empty(glob("~/.vim/bundle/ctrlp.vim"))
    let g:ctrlp_match_window='bottom,order:btt,min:10,max:10'
    let g:ctrlp_switch_buffer='Et'
    let g:ctrlp_working_path_mode='ra'
endif

" Ag, The Silver Searcher
if !empty(glob("~/.vim/bundle/ag.vim"))
    let g:ag_working_path_mode="r"
    noremap <leader>a :Ag 
endif

" Syntastic!
if !empty(glob("~/.vim/bundle/syntastic"))
    let g:syntastic_always_populate_loc_list = 1
    let g:syntastic_check_on_open = 1
    let g:syntastic_check_on_wq = 1

    let g:syntastic_cpp_checkers=['gcc', 'cppcheck']
endif

" EasyMotion
"if !empty(glob("~/.vim/bundle/vim-easymotion"))
" TODO!

nmap :H :h
" I can't figure out how to get the help to open up in a vsplit
noremap :h :vertical h 

